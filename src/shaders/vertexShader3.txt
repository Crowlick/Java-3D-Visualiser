#version 400 core

in vec3 position;
in vec3 normalsinio;

out vec3 color;

uniform mat4 transformMatrix;
uniform mat3 normalMatrix;
uniform vec3 col;

void main(void)
{
	gl_Position =  transformMatrix * vec4(position, 1.0);
	
	vec3 normal = normalize(normalMatrix * normalsinio);
	
	vec3 modelColor = col;
	
	vec3 lightColor = vec3(1., 1., 1.);
  	vec3 lightSource = vec3(0., 1., 0.);
  	float diffStrength = max(0., dot(lightSource, normal));
  	vec3 diffuse = diffStrength * lightColor;
	vec3 ambient = vec3(0.8, 0.8, 0.8);
	
	vec3 lighting = ambient + diffuse;
	
	color = modelColor * lighting;
}